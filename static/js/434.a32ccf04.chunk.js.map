{"version":3,"file":"static/js/434.a32ccf04.chunk.js","mappings":"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","sources":["tests/Quiz/QuestionBankEditor/QuestionBankEditor.js","pages/QuestionBankEditor/QuestionBankEditor.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { mainTestBank } from \"../../../data/hajduflyTestbank\"; // Importáljuk a kérdésbankot\r\nimport { Icons } from \"../../../assets/icons/icons\";\r\nimport ActionConfirmationPopup from \"../../../components/ActionConfirmationModal/ActionConfirmationModal\";\r\nimport \"./QuestionBankEditor.css\";\r\nimport \"./QuestionBankEditorSection.css\";\r\n\r\nconst QuestionEditor = ({ question, onSave, onCancel }) => {\r\n  const [editedQuestion, setEditedQuestion] = useState(question);\r\n  const [activePopup, setActivePopup] = useState(null); // Explanation törlés popup állapot\r\n  const [activeOptionPopup, setActiveOptionPopup] = useState(null); // Option törlés popup állapot\r\n\r\n  const handleOptionChange = (index, value) => {\r\n    const newOptions = [...editedQuestion.options];\r\n    newOptions[index] = value;\r\n    setEditedQuestion({ ...editedQuestion, options: newOptions });\r\n  };\r\n\r\n  const handleCorrectAnswerChange = (index) => {\r\n    setEditedQuestion({ ...editedQuestion, correctAnswer: index });\r\n  };\r\n\r\n  const handleExplanationChange = (index, field, value) => {\r\n    const newExplanation = [...editedQuestion.explanation];\r\n    newExplanation[index][field] = value;\r\n    setEditedQuestion({ ...editedQuestion, explanation: newExplanation });\r\n  };\r\n\r\n  const addExplanationPart = () => {\r\n    const newExplanation = [\r\n      ...editedQuestion.explanation,\r\n      { type: \"text\", content: \"\" },\r\n    ];\r\n    setEditedQuestion({ ...editedQuestion, explanation: newExplanation });\r\n  };\r\n\r\n  const deleteExplanationPart = (index) => {\r\n    const newExplanation = editedQuestion.explanation.filter(\r\n      (_, i) => i !== index\r\n    );\r\n    setEditedQuestion({ ...editedQuestion, explanation: newExplanation });\r\n    setActivePopup(null); // Popup bezárása\r\n  };\r\n\r\n  const deleteOption = (index) => {\r\n    const newOptions = editedQuestion.options.filter((_, i) => i !== index);\r\n    setEditedQuestion({ ...editedQuestion, options: newOptions });\r\n    setActiveOptionPopup(null); // Popup bezárása\r\n  };\r\n\r\n  const autoResize = (textarea) => {\r\n    textarea.style.height = \"auto\"; // Először visszaállítjuk az alapmagasságot\r\n    textarea.style.height = textarea.scrollHeight + \"px\"; // Beállítjuk a magasságot\r\n  };\r\n\r\n  const popupsConfig = {\r\n    deleteExplanation: {\r\n      question: \"Do you want to delete this explanation section?\",\r\n      buttons: [\r\n        {\r\n          text: \"Yes, delete it\",\r\n          onClick: () => deleteExplanationPart(activePopup),\r\n          icon: <Icons.HiOutlineTrash size={18} />,\r\n        },\r\n        {\r\n          text: \"No, keep it\",\r\n          onClick: () => setActivePopup(null),\r\n          icon: <Icons.HiOutlineXMark size={20} />,\r\n        },\r\n      ],\r\n    },\r\n    deleteOption: {\r\n      question: \"Do you want to delete this option?\",\r\n      buttons: [\r\n        {\r\n          text: \"Yes, delete it\",\r\n          onClick: () => deleteOption(activeOptionPopup),\r\n          icon: <Icons.HiOutlineTrash size={18} />,\r\n        },\r\n        {\r\n          text: \"No, keep it\",\r\n          onClick: () => setActiveOptionPopup(null),\r\n          icon: <Icons.HiOutlineXMark size={20} />,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-section\">\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          onSave(editedQuestion);\r\n        }}\r\n      >\r\n        <div className=\"editor-question-section\">\r\n          <div className=\"question-edit-top-bar\">\r\n            <h3>Enter Question Details</h3>\r\n            <Icons.HiOutlineXMark\r\n              className=\"x-exam-finnish-button\"\r\n              onClick={onCancel}\r\n              size={24}\r\n            />\r\n          </div>\r\n          <div className=\"enter-question-sections\">\r\n            <div className=\"quetion-editor-left-section\">\r\n              <div className=\"editor-head-section\">\r\n                <label>\r\n                  <p>Topic:</p>\r\n                  <select\r\n                    value={editedQuestion.topic}\r\n                    onChange={(e) =>\r\n                      setEditedQuestion({\r\n                        ...editedQuestion,\r\n                        topic: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <option value=\"Topic1\">Topic1</option>\r\n                    <option value=\"Topic2\">Topic2</option>\r\n                    {/* További témák */}\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <p>Subtopic:</p>\r\n                  <select\r\n                    value={editedQuestion.subtopic}\r\n                    onChange={(e) =>\r\n                      setEditedQuestion({\r\n                        ...editedQuestion,\r\n                        subtopic: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <option value=\"Subtopic1\">Subtopic1</option>\r\n                    <option value=\"Subtopic2\">Subtopic2</option>\r\n                    {/* További altémák */}\r\n                  </select>\r\n                </label>\r\n              </div>\r\n              <div className=\"difficulty-row\">\r\n                <label>\r\n                  <p>ID:</p>\r\n                  <input type=\"text\" value={editedQuestion.id} disabled />\r\n                </label>\r\n                <label>\r\n                  <p>Difficulty:</p>\r\n                  <select\r\n                    value={editedQuestion.difficulty}\r\n                    onChange={(e) =>\r\n                      setEditedQuestion({\r\n                        ...editedQuestion,\r\n                        difficulty: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <option value=\"Easy\">Easy</option>\r\n                    <option value=\"Medium\">Medium</option>\r\n                    <option value=\"Hard\">Hard</option>\r\n                  </select>\r\n                </label>\r\n              </div>\r\n              <label className=\"question-input\">\r\n                <p>Question:</p>\r\n                <textarea\r\n                  value={editedQuestion.question}\r\n                  onChange={(e) => {\r\n                    setEditedQuestion({\r\n                      ...editedQuestion,\r\n                      question: e.target.value,\r\n                    });\r\n                    autoResize(e.target); // Automatikus magasságfrissítés\r\n                  }}\r\n                  ref={(el) => el && autoResize(el)} // Meglévő elemek magasságának frissítése\r\n                  className=\"auto-resize-textarea\"\r\n                />\r\n              </label>\r\n\r\n              <div className=\"editor-option-section\">\r\n                {editedQuestion.options.map((option, index) => (\r\n                  <label key={index}>\r\n                    <div className=\"option-section\">\r\n                      <p>Option {index + 1}:</p>\r\n                      <div className=\"option-section-input\">\r\n                        <input\r\n                          type=\"text\"\r\n                          value={option}\r\n                          onChange={(e) =>\r\n                            handleOptionChange(index, e.target.value)\r\n                          }\r\n                        />\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"correct-answer-checkbox\"\r\n                          checked={editedQuestion.correctAnswer === index}\r\n                          onChange={() => handleCorrectAnswerChange(index)}\r\n                        />\r\n\r\n                        <Icons.IoMdCloseCircleOutline\r\n                          size={20}\r\n                          onClick={() => setActiveOptionPopup(index)}\r\n                          className=\"delete-option-btn\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </label>\r\n                ))}\r\n                <button className=\"add-options-btn\">\r\n                  <Icons.IoIosAddCircleOutline size={20} /> Add Options\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"quetion-editor-right-section\">\r\n              <label>\r\n                Explanation:\r\n                <div className=\"explanation-editor-container\">\r\n                  {editedQuestion.explanation.map((part, index) => (\r\n                    <div key={index} className=\"explanation-part\">\r\n                      <select\r\n                        value={part.type}\r\n                        onChange={(e) =>\r\n                          handleExplanationChange(index, \"type\", e.target.value)\r\n                        }\r\n                      >\r\n                        <option value=\"text\">Text</option>\r\n                        <option value=\"math\">Math</option>\r\n                        <option value=\"image\">Image</option>\r\n                      </select>\r\n                      <textarea\r\n                        value={part.content}\r\n                        onChange={(e) => {\r\n                          handleExplanationChange(\r\n                            index,\r\n                            \"content\",\r\n                            e.target.value\r\n                          );\r\n                          autoResize(e.target); // Automatikus magasságfrissítés\r\n                        }}\r\n                        ref={(el) => el && autoResize(el)} // Meglévő elemek magasságának frissítése\r\n                        className=\"auto-resize-textarea\"\r\n                      />\r\n\r\n                      <Icons.IoMdCloseCircleOutline\r\n                        size={20}\r\n                        onClick={() => setActivePopup(index)}\r\n                        className=\"delete-explanation-btn\"\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </label>\r\n              <button\r\n                className=\"add-explanation-section-btn\"\r\n                onClick={addExplanationPart}\r\n              >\r\n                <Icons.IoIosAddCircleOutline size={20} />\r\n                Add Explanation Section\r\n              </button>\r\n            </div>\r\n          </div>{\" \"}\r\n        </div>\r\n      </form>\r\n      <div className=\"save-button-container\">\r\n        <button className=\"save-question-edit-btn\" type=\"submit\">\r\n          Save Question\r\n        </button>\r\n      </div>\r\n\r\n      {activePopup !== null && (\r\n        <ActionConfirmationPopup\r\n          show={true}\r\n          onOverlayClick={() => setActivePopup(null)}\r\n          question={popupsConfig.deleteExplanation.question}\r\n          buttons={popupsConfig.deleteExplanation.buttons}\r\n        />\r\n      )}\r\n\r\n      {activeOptionPopup !== null && (\r\n        <ActionConfirmationPopup\r\n          show={true}\r\n          onOverlayClick={() => setActiveOptionPopup(null)}\r\n          question={popupsConfig.deleteOption.question}\r\n          buttons={popupsConfig.deleteOption.buttons}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst QuestionBankEditor = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedTopic, setSelectedTopic] = useState(\"\");\r\n  const [selectedSubtopic, setSelectedSubtopic] = useState(\"\");\r\n  const [editingQuestion, setEditingQuestion] = useState(null);\r\n\r\n  const handleEditClick = (question) => {\r\n    setEditingQuestion(question);\r\n  };\r\n\r\n  const handleSaveEdit = (updatedQuestion) => {\r\n    // Itt lehetne implementálni a kérdés frissítését a mainTestBank-ban\r\n    console.log(\"Updated Question:\", updatedQuestion);\r\n    setEditingQuestion(null);\r\n  };\r\n\r\n  const filteredQuestions = mainTestBank\r\n    .filter((topic) => !selectedTopic || topic.topic === selectedTopic)\r\n    .flatMap((topic) =>\r\n      topic.questions.filter(\r\n        (question) =>\r\n          (!selectedSubtopic || question.subtopic === selectedSubtopic) &&\r\n          question.question.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    );\r\n\r\n  const topics = [...new Set(mainTestBank.map((topic) => topic.topic))];\r\n  const subtopics = [\r\n    ...new Set(\r\n      mainTestBank\r\n        .filter((topic) => !selectedTopic || topic.topic === selectedTopic)\r\n        .flatMap((topic) =>\r\n          topic.questions.map((question) => question.subtopic)\r\n        )\r\n    ),\r\n  ];\r\n\r\n  return (\r\n    <div className=\"question-bank-editor-container\">\r\n      {editingQuestion ? (\r\n        <QuestionEditor\r\n          question={editingQuestion}\r\n          onSave={handleSaveEdit}\r\n          onCancel={() => setEditingQuestion(null)}\r\n        />\r\n      ) : (\r\n        <>\r\n          <h2>Question Bank</h2>\r\n          <div className=\"question-bank-filter\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search questions...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <select\r\n              value={selectedTopic}\r\n              onChange={(e) => setSelectedTopic(e.target.value)}\r\n            >\r\n              <option value=\"\">All Topics</option>\r\n              {topics.map((topic) => (\r\n                <option key={topic} value={topic}>\r\n                  {topic}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <select\r\n              value={selectedSubtopic}\r\n              onChange={(e) => setSelectedSubtopic(e.target.value)}\r\n            >\r\n              <option value=\"\">All Subtopics</option>\r\n              {subtopics.map((subtopic) => (\r\n                <option key={subtopic} value={subtopic}>\r\n                  {subtopic}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"table-container\">\r\n            <div className=\"table-header\">\r\n              <div style={{ width: \"10%\" }}>ID</div>\r\n              <div style={{ width: \"70%\" }}>Question</div>\r\n              <div style={{ width: \"20%\" }}>Actions</div>\r\n            </div>\r\n            <div className=\"table-body\">\r\n              {filteredQuestions.map((question) => (\r\n                <div key={question.id} className=\"table-row\">\r\n                  <div style={{ width: \"10%\" }}>{question.id}</div>\r\n                  <div style={{ width: \"70%\" }}>{question.question}</div>\r\n                  <div style={{ width: \"20%\" }}>\r\n                    <button onClick={() => handleEditClick(question)}>\r\n                      ✏️\r\n                    </button>\r\n                    <button>🗑️</button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <button className=\"create-new-question-btn\">\r\n            <Icons.IoIosAddCircleOutline size={20} /> Create Question\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBankEditor;\r\n","import React from \"react\";\r\nimport QuestionBankEditor from \"../../tests/Quiz/QuestionBankEditor/QuestionBankEditor\";\r\n\r\nfunction QuestionBankEditorPage() {\r\n  return (\r\n    <div>\r\n      <QuestionBankEditor />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionBankEditorPage;\r\n"],"names":["QuestionEditor","_ref","question","onSave","onCancel","editedQuestion","setEditedQuestion","useState","activePopup","setActivePopup","activeOptionPopup","setActiveOptionPopup","handleExplanationChange","index","field","value","newExplanation","explanation","autoResize","textarea","style","height","scrollHeight","popupsConfig","deleteExplanation","buttons","text","onClick","filter","_","i","deleteExplanationPart","icon","_jsx","Icons","HiOutlineTrash","size","HiOutlineXMark","deleteOption","newOptions","options","_jsxs","className","children","onSubmit","e","preventDefault","topic","onChange","target","subtopic","type","id","disabled","difficulty","ref","el","map","option","handleOptionChange","checked","correctAnswer","handleCorrectAnswerChange","IoMdCloseCircleOutline","IoIosAddCircleOutline","part","content","addExplanationPart","ActionConfirmationPopup","show","onOverlayClick","QuestionBankEditor","searchTerm","setSearchTerm","selectedTopic","setSelectedTopic","selectedSubtopic","setSelectedSubtopic","editingQuestion","setEditingQuestion","filteredQuestions","mainTestBank","flatMap","questions","toLowerCase","includes","topics","Set","subtopics","updatedQuestion","console","log","_Fragment","placeholder","width","handleEditClick"],"sourceRoot":""}